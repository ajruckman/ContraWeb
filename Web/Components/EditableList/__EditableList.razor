@using Infrastructure.Schema
@using Superset.Web.Validation

<div class="EditableListContainer @(EditableList!.Disabled() ? "EditableListContainer--Disabled" : "") @(EditableList!.Monospace ? "EditableListContainer--Monospace" : "")">
    <div class="EditableList--Selected">
        @foreach (string v in EditableList!.Values)
        {
            <div class="EditableList--Selection">
                <span class="EditableList--Value">@v</span>
                <button class="EditableList--RemoveButton" @onclick="@(_ => EditableList!.Remove(v))" disabled="@(EditableList!.Disabled())">✕</button>
            </div>
        }
    </div>

    <div class="EditableList--New">
        <input class="EditableList--Input SS_Input" value="@_newValue" disabled="@EditableList!.Disabled()" @oninput="@UpdateNewValue" @onkeypress="OnKeyPress" type="text" placeholder="@EditableList!.Placeholder"/>
        <button class="EditableList--AddButton SS_Button" disabled="@(!CanAdd())" @onclick="@Add">+</button>
    </div>

    @if (EditableList!.Validated)
    {
        <div class="EditableList--Validation">
            @{
                if (_validation != null)
                {
                    <div class="EditableList--ValidationMark">
                        @switch (_validation.Value.Item1)
                        {
                            case (ValidationResult.Undefined):
                                break;
                            case (ValidationResult.Invalid):
                                <div class="XMark"></div>
                                break;
                            case (ValidationResult.Warning):
                                <div class="Exclamation"></div>
                                break;
                            case (ValidationResult.Valid):
                                <div class="CheckMark"></div>
                                break;
                        }
                    </div>
                    <div class="EditableList--ValidationText">
                        @_validation.Value.Item2
                    </div>
                }
            }
        </div>
    }
</div>